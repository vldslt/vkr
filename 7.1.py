'''
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса
(метод __init__()), который должен принимать данные (список списков) для формирования
матрицы.
Подсказка: матрица — система некоторых математических величин,
расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном
виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух
объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
'''

class Matrix(object):
    def __init__(self, list_1, list_2, list_3):
        # self.matr = [list_1, list_2, list_3]
        self.list_1 = list_1
        self.list_2 = list_2
        self.list_3 = list_3


    def __add__(self):
        matr1 = [[31, 22],
                [37, 43],
                [51, 86]]
        #matr2 = [[3, 5, 32]
        #         [2, 4, 6]
        #        [-1, 64, 8]]
        #matr3 = [[3, 5, 8, 3]
        #        [8, 3, 7, 1]]

        for i in range(len(self.list_1)):

            for j in range(len(self.list_2[i])):
                matr1[i][j] = self.list_1[i][j] + self.list_2[i][j]

        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in matr1]))


    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in matr1]))



my_matrix = Matrix([[31, 22],[37, 43],[51, 86]])


print(my_matrix.__add__())
